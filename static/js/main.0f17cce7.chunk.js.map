{"version":3,"sources":["components/fork/index.js","components/highlighter/index.js","components/header/index.js","redux-constants/fetch.js","utils/params.js","actions/bioNlp.js","components/input-with-examples/tooltip-composed-menu.js","components/input-with-examples/example-select.js","containers/input-with-examples/example-select.js","components/input-with-examples/example-text.js","containers/input-with-examples/example-text.js","components/button/index.js","components/input-with-examples/submit.js","containers/input-with-examples/submit.js","actions/bcdr.js","containers/input-with-examples/bc5dr-select.js","containers/input-with-examples/bc5dr-text.js","containers/input-with-examples/bc5dr-submit.js","enums/request-types.js","components/input-with-examples/index.js","containers/input-with-examples/index.js","components/response-text-area/styled-text.js","utils/mapCodeToColors.js","components/response-text-area/index.js","containers/response-text-area/bioNlp-text-area.js","containers/response-text-area/bc5dr-text-area.js","containers/response-text-area/container.js","components/response-text-area/container.js","actions/request-type.js","components/request-type-radio/index.js","containers/request-type-radio.js","pages/home/index.js","reducers/bioNlp.js","reducers/bcdr.js","reducers/request-type.js","reducers/index.js","serviceWorker.js","index.js"],"names":["GithubForkWrapper","styled","a","_templateObject","GithubFork","react_default","createElement","target","href","this","props","className","React","PureComponent","Highlighter","span","highlighter_templateObject","color","bgColor","Header","Typography","header_templateObject","redux_constants_fetch","params","arguments","length","undefined","Object","keys","reduce","queryString","key","index","window","encodeURIComponent","fetchBioNlp","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","payload","response","wrap","_context","prev","next","type","constants","bioNlp","request","fetch","concat","then","json","sent","t0","errorMessage","stop","_x","_x2","apply","updateBioNlp","text","content","EllipsisText","tooltip_composed_menu_templateObject","tooltip_composed_menu","selectedKey","rest","objectWithoutProperties","value","Tooltip_default","title","MenuItem_default","assign","selected","examples","Subheader","li","example_select_templateObject","ExampleSelect","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","selectedExampleKey","handleChange","event","selectedExample","setState","update","labelRef","createRef","_this2","FormControl_default","variant","style","width","RootRef_default","rootRef","InputLabel_default","whiteSpace","htmlFor","Select_default","renderValue","onChange","input","OutlinedInput_default","notched","labelWidth","name","id","MenuProps","PaperProps","slice","map","example","Component","connect","bindActionCreators","ExampleText","TextField_default","margin","placeholder","fullWidth","multiline","Button","button_templateObject","Submit","components_button","onClick","fetchData","fetchBc5cdr","bc5cdr","updateBc5cdr","freeze","BIO_NLP","BC5CDR","InputWithExamples","Grid_default","container","flexGrow","justify","alignItems","spacing","item","xs","types","example_select","bc5dr_select","example_text","bc5dr_text","textAlign","containers_input_with_examples_submit","bc5dr_submit","requestType","StyledText","styled_text_templateObject","theme","palette","primary","main","withTheme","mapCodeToColors","B-Chemical","bg","fg","I-Chemical","B-Disease","I-Disease","B-Anatomical_system","B-Cancer","B-Cell","B-Cellular_component","B-Developing_anatomical_structure","B-Gene_or_gene_product","B-Immaterial_anatomical_entity","B-Multi-tissue_structure","B-Organ","B-Organism","B-Organism_subdivision","B-Organism_substance","B-Pathological_formation","B-Simple_chemical","B-Tissue","I-Amino_acid","I-Anatomical_system","I-Cancer","I-Cell","I-Cellular_component","I-Developing_anatomical_structure","I-Gene_or_gene_product","I-Immaterial_anatomical_entity","I-Multi-tissue_structure","I-Organ","I-Organism","I-Organism_subdivision","I-Organism_substance","I-Pathological_formation","I-Simple_chemical","I-Tissue","Wrapper","div","response_text_area_templateObject","response_text_area","tags","loading","tag","i","space","react","styled_text","CircularProgress_default","ResponseTextArea","tagging","bioNlp_text_area","bc5dr_text_area","updateRequestType","RequestRadio","RadioGroup_default","aria-label","row","FormControlLabel_default","control","Radio_default","label","labelPlacement","createMuiTheme","secondary","typography","useNextVariants","MuiButtonBase","App","styles","padding","fork_GithubFork","direction","gutterBottom","component","Typography_default","Card_default","CardContent_default","marginTop","request_type_radio","input_with_examples","response_text_area_container","initialState","bionlp3g","error","combineReducers","action","immutatedState","objectSpread","Boolean","location","hostname","match","require","config","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","thunk","ReactDOM","render","es","pages_home","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f17cce7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst GithubForkWrapper = styled.a`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 1000;\n  margin: 10px;\n  text-decoration: none;\n  font-size: 30px;\n  color: rgba(0, 0, 0, 0.5);\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover, &:focus {\n    color: rgba(0, 0, 0, 0.8);\n  }\n`;\n\nexport default class GithubFork extends React.PureComponent {\n  static propTypes = {\n    href: PropTypes.string.isRequired\n  };\n\n  render () {\n    return <GithubForkWrapper target='_blank' href={this.props.href}>\n      <i className='fab fa-github'></i>\n    </GithubForkWrapper>\n  }\n}\n\n","import styled from 'styled-components';\n\nexport const Highlighter = styled.span`\n  color: ${props => props.color};\n  border-radius: 5px;\n  background-color: ${props => props.bgColor ? props.bgColor : 'transparent'}\n`;\n","import styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\n\nexport const Header = styled(Typography)`\n  color: ${props => props.color ? props.color: '#4f4f4f'} !important;\n`;\n","export default {\n  FETCH_BIO_NLP_REQUEST: 'FETCH_BIO_NLP_REQUEST',\n  FETCH_BIO_NLP_SUCCESS: 'FETCH_BIO_NLP_SUCCESS',\n  FETCH_BIO_NLP_FAILURE: 'FETCH_BIO_NLP_FAILURE',\n  UPDATE_BIO_NLP: 'UPDATE_BIO_NLP',\n\n  FETCH_BC5CDR_REQUEST: 'FETCH_BC5CDR_REQUEST',\n  FETCH_BC5CDR_SUCCESS: 'FETCH_BC5CDR_SUCCESS',\n  FETCH_BC5CDR_FAILURE: 'FETCH_BC5CDR_FAILURE',\n  UPDATE_BC5CDR: 'UPDATE_BC5CDR',\n\n  REQUEST_TYPE_CHANGE: 'REQUEST_TYPE_CHANGE',\n}\n","export default (params = {}) => {\n  return Object.keys(params).reduce((queryString, key, index) => {\n    queryString += (index !== 0 ? '&' : '') + window.encodeURIComponent(key) + '=' + window.encodeURIComponent(params[key]);\n    return queryString;\n  }, '');\n}\n","import constants from '../redux-constants/fetch';\nimport params from '../utils/params';\n\nexport const fetchBioNlp = () => async (dispatch, getState) => {\n  dispatch({\n    type: constants.FETCH_BIO_NLP_REQUEST\n  })\n\n  const payload =  params(getState().bioNlp.request);\n\n  try {\n    const response = await fetch(`http://13.72.66.146:9000/extract-ner?${payload}`)\n      .then(response => response.json());\n    dispatch({\n      type: constants.FETCH_BIO_NLP_SUCCESS,\n      response\n    })\n  } catch (error) {\n    dispatch({\n      type: constants.FETCH_BIO_NLP_FAILURE,\n      errorMessage: 'Request Failed'\n    })\n  }\n}\n\nexport const updateBioNlp = text => {\n  return {\n    type: constants.UPDATE_BIO_NLP,\n    content: text\n  }\n}\n","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport styled from 'styled-components';\n\nconst EllipsisText = styled.span`\n  width: 100%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport default props => {\n  const {key, selectedKey, ...rest} = props;\n  const value = rest['data-value'];\n  return <Tooltip title={value.text}>\n    <MenuItem selected={value.key === selectedKey} {...rest}>\n      <EllipsisText>{value.text}</EllipsisText>\n    </MenuItem>\n  </Tooltip>\n  // return 'Hello World'\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport styled from 'styled-components';\nimport RootRef from '@material-ui/core/RootRef';\n\nimport TooltipMenu from './tooltip-composed-menu';\n\nconst examples = [\n  {\n    key: 'bnlp#1',\n    type: 'bioNlp',\n    text: 'Cooccurrence of reduced expression of alpha - catenin and overexpression of p53 is a predictor of lymph node metastasis in early gastric cancer.',\n  },\n  {\n    key: 'bnlp#2',\n    type: 'bioNlp',\n    text: 'In this review , the role of TSH - R gene alterations in benign and malignant thyroid neoplasia is examined.',\n  },\n  {\n    key: 'bc5cdr#1',\n    type: 'bc5cdr',\n    text: \"The authors describe the case of a 56 - year - old woman with chronic , severe heart failure secondary to dilated cardiomyopathy and absence of significant ventricular arrhythmias who developed QT prolongation and torsade de pointes ventricular tachycardia during one cycle of intermittent low dose ( 2.5 mcg/kg per min ) dobutamine.\"\n  }\n];\n\nconst Subheader = styled.li`\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  line-height: 1.5em;\n  padding: 11px 16px;\n  color: #827717;\n  font-weight: 700;\n  border-bottom: 1px solid #e2e2e2;\n  pointer-events: none;\n`;\n\n\n\nexport default class ExampleSelect extends React.Component {\n  static propTypes = {\n    update: PropTypes.func.isRequired\n  };\n\n  state = {\n    content: '',\n    selectedExampleKey: ''\n  }\n\n  constructor(props) {\n    super(props);\n    this.labelRef = React.createRef();\n  }\n\n\n  handleChange = event => {\n    const selectedExample = typeof event.target.value === 'string' ? {} : event.target.value;\n    this.setState({\n      content: selectedExample.text || '',\n      selectedExampleKey: selectedExample.key || ''\n    })\n    this.props.update(selectedExample.text || '');\n  };\n\n  render () {\n    return (\n      <FormControl variant=\"outlined\" style={{ width: '100%' }}>\n        <RootRef rootRef={this.labelRef}>\n          <InputLabel\n            style={{ whiteSpace: 'nowrap' }}\n            htmlFor=\"outlined-example\"\n          >\n            Example Texts\n          </InputLabel>\n        </RootRef>\n        <Select\n          value={this.state.content}\n          renderValue={() => {\n            return <span>{this.state.content}</span>\n          }}\n          onChange={this.handleChange}\n          input={\n            <OutlinedInput\n              notched\n              labelWidth={110}\n              name=\"example\"\n              id=\"outlined-example\"\n            />\n          }\n          MenuProps={{\n            PaperProps: {\n              style: {\n                width: 400,\n              },\n            },\n          }}\n        >\n          <MenuItem selected={!this.state.selectedExampleKey} value=\"\"><em>--</em></MenuItem>\n          <Subheader className='subheader'>Bio NLP</Subheader>\n            {\n              examples.slice(0, 2).map(example => {\n                return <TooltipMenu key={example.key} selectedKey={this.state.selectedExampleKey} value={example} />\n              })\n            }\n          <Subheader className='subheader'>BC5 CDR</Subheader>\n            {\n              examples.slice(2).map(example => {\n                return <TooltipMenu key={example.key} selectedKey={this.state.selectedExampleKey} value={example} />\n              })\n            }\n        </Select>\n      </FormControl>\n    );\n  }\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { updateBioNlp } from '../../actions/bioNlp';\nimport ExampleSelect from '../../components/input-with-examples/example-select';\n\nconst mapStateToProps = state => {\n  return {\n    content: state.bioNlp.request.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    update: updateBioNlp\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExampleSelect);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nexport default class ExampleText extends React.Component {\n  static propTypes = {\n    content: PropTypes.string,\n    update: PropTypes.func.isRequired\n  }\n\n  handleChange = event => {\n    this.props.update(event.target.value);\n  }\n\n  render () {\n    return (\n      <TextField\n        id=\"standard-full-width\"\n        style={{ margin: 0 }}\n        placeholder=\"Placeholder\"\n        fullWidth\n        margin=\"normal\"\n        onChange={this.handleChange}\n        value={this.props.content}\n        multiline\n      />\n    )\n  }\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { updateBioNlp } from '../../actions/bioNlp';\nimport ExampleText from '../../components/input-with-examples/example-text';\n\nconst mapStateToProps = state => {\n  return {\n    content: state.bioNlp.request.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    update: updateBioNlp\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExampleText);\n","import styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\n\nexport default styled(Button)`\n  color: #f2f2f2 !important;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../button';\n\nconst Submit = (props) => {\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={props.fetchData}>\n      Submit\n    </Button>\n  )\n}\n\nSubmit.propTypes = {\n  fetchData: PropTypes.func.isRequired\n}\n\nexport default Submit;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { fetchBioNlp } from '../../actions/bioNlp';\nimport Submit from '../../components/input-with-examples/submit';\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    fetchData: fetchBioNlp\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(Submit);\n","import constants from '../redux-constants/fetch';\nimport params from '../utils/params';\n\nexport const fetchBc5cdr = () => async (dispatch, getState) => {\n  dispatch({\n    type: constants.FETCH_BC5CDR_REQUEST\n  })\n\n  const payload =  params(getState().bc5cdr.request);\n\n  try {\n    const response = await fetch(`http://13.72.66.146:9000/extract-ner?${payload}`)\n      .then(response => response.json());\n    dispatch({\n      type: constants.FETCH_BC5CDR_SUCCESS,\n      response\n    })\n  } catch (error) {\n    dispatch({\n      type: constants.FETCH_BC5CDR_FAILURE,\n      errorMessage: 'Request Failed'\n    })\n  }\n}\n\nexport const updateBc5cdr = text => {\n  return {\n    type: constants.UPDATE_BC5CDR,\n    content: text\n  }\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { updateBc5cdr } from '../../actions/bcdr';\nimport ExampleSelect from '../../components/input-with-examples/example-select';\n\nconst mapStateToProps = state => {\n  return {\n    content: state.bc5cdr.request.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    update: updateBc5cdr\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExampleSelect);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { updateBc5cdr } from '../../actions/bcdr';\nimport ExampleText from '../../components/input-with-examples/example-text';\n\nconst mapStateToProps = state => {\n  return {\n    content: state.bc5cdr.request.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    update: updateBc5cdr\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExampleText);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { fetchBc5cdr } from '../../actions/bcdr';\nimport Submit from '../../components/input-with-examples/submit';\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    fetchData: fetchBc5cdr\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(Submit);\n","export default Object.freeze({\n  BIO_NLP: 'bio',\n  BC5CDR: 'bc5'\n})\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ExampleSelect from '../../containers/input-with-examples/example-select';\nimport ExampleText from '../../containers/input-with-examples/example-text';\nimport Submit from '../../containers/input-with-examples/submit';\nimport Bc5drSelect from '../../containers/input-with-examples/bc5dr-select';\nimport Bc5drText from '../../containers/input-with-examples/bc5dr-text';\nimport Bc5drSubmit from '../../containers/input-with-examples/bc5dr-submit';\nimport Grid from '@material-ui/core/Grid';\n\nimport types from '../../enums/request-types';\n\nexport default class InputWithExamples extends React.PureComponent {\n  static propTypes = {\n    type: PropTypes.string.isRequired\n  }\n\n  render () {\n    return (\n      <Grid container style={{ margin: '-12px', flexGrow: 0, width: '100%' }} justify='center' alignItems='center' spacing={24}>\n        <Grid item xs={2}>\n          { this.props.type === types.BIO_NLP\n            ? <ExampleSelect />\n            : <Bc5drSelect />\n          }\n        </Grid>\n        <Grid item xs={7}>\n          { this.props.type === types.BIO_NLP\n            ? <ExampleText />\n            : <Bc5drText />\n          }\n        </Grid>\n        <Grid item xs={1} style={{ textAlign: 'right' }}>\n          { this.props.type === types.BIO_NLP\n            ? <Submit />\n            : <Bc5drSubmit />\n          }\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import { connect } from 'react-redux';\nimport ExampleSelect from '../../components/input-with-examples';\n\nconst mapStateToProps = state => {\n  return {\n    type: state.requestType.type\n  }\n}\n\nexport default connect(mapStateToProps, null)(ExampleSelect);\n","import styled from 'styled-components';\nimport { withTheme } from '@material-ui/core/styles';\n\nconst StyledText = styled.span`\n  display: inline-flex;\n  flex-direction: column;\n  position: relative;\n  padding: 5px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n  box-sizing: border-box;\n  background: ${props => props.bgColor ? props.bgColor : props.theme.palette.primary.main};\n\n  > span.text {\n    padding: 4px 10px;\n    background: #fff;\n    color: #424242;\n    box-sizing: border-box;\n    border-radius: 5px;\n    line-height: 1.4;\n    text-align: center;\n  }\n\n  > span.type {\n    font-size: 12px;\n    background: ${props => props.bgColor ? props.bgColor : props.theme.palette.primary.main};\n    color: ${props => props.color ? props.color : props.theme.palette.primary.main};\n    line-height: 1;\n    padding-top: 5px;\n    border-radius: 0 0 5px 5px;\n    text-align: center;\n  }\n`;\n\nexport default withTheme()(StyledText)\n","export default {\n  'B-Chemical': {\n    bg: '#ab47bc',\n    fg: '#f2f2f2',\n  },\n  'I-Chemical': {\n    bg: '#8e24aa',\n    fg: '#f2f2f2',\n  },\n  'B-Disease': {\n    bg: '#37474f',\n    fg: '#f2f2f2',\n  },\n  'I-Disease': {\n    bg: '#424242',\n    fg: '#f2f2f2',\n  },\n  'B-Anatomical_system': {\n    bg: '#ffd180',\n    fg: '#333'\n  },\n  'B-Cancer': {\n    bg: '#212121',\n    fg: '#f2f2f2'\n  },\n  'B-Cell': {\n    bg: '#43a047',\n    fg: '#fff'\n  },\n  'B-Cellular_component': {\n    bg: '#388e3c',\n    fg: '#f2f2f2'\n  },\n  'B-Developing_anatomical_structure': {\n    bg: '#ffb300',\n    fg: '#333'\n  },\n  'B-Gene_or_gene_product': {\n    bg: '#26a69a',\n    fg: '#fff'\n  },\n  'B-Immaterial_anatomical_entity': {\n    bg: '#78909c',\n    fg: '#fff'\n  },\n  'B-Multi-tissue_structure': {\n    bg: '#827717',\n    fg: '#fff'\n  },\n  'B-Organ': {\n    bg: '#d32f2f',\n    fg: '#f2f2f2'\n  },\n  'B-Organism': {\n    bg: '#689f38',\n    fg: '#fff'\n  },\n  'B-Organism_subdivision': {\n    bg: '#33691e',\n    fg: '#f2f2f2'\n  },\n  'B-Organism_substance': {\n    bg: '#795548',\n    fg: '#f2f2f2'\n  },\n  'B-Pathological_formation': {\n    bg: '#0288d1',\n    fg: '#fff'\n  } ,\n  'B-Simple_chemical': {\n    bg: '#d81b60',\n    fg: '#f2f2f2'\n  },\n  'B-Tissue': {\n    bg: '#673ab7',\n    fg: '#fff'\n  },\n  'I-Amino_acid': {\n    bg: '#558b2f',\n    fg: '#fff'\n  },\n  'I-Anatomical_system': {\n    bg: '#e64a19',\n    fg: '#fff'\n  },\n  'I-Cancer': {\n    bg: '#455a64',\n    fg: '#f2f2f2'\n  },\n  'I-Cell': {\n    bg: '#fbc02d',\n    fg: '#333'\n  },\n  'I-Cellular_component': {\n    bg: '#0097a7',\n    fg: '#fff'\n  },\n  'I-Developing_anatomical_structure': {\n    bg: '#303f9f',\n    fg: '#f2f2f2'\n  },\n  'I-Gene_or_gene_product': {\n    bg: '#512da8',\n    fg: '#f2f2f2'\n  },\n  'I-Immaterial_anatomical_entity': {\n    bg: '#6d4c41',\n    fg: '#f2f2f2'\n  },\n  'I-Multi-tissue_structure': {\n    bg: '#1976d2',\n    fg: '#f2f2f2'\n  },\n  'I-Organ': {\n    bg: '#ef5350',\n    fg: '#fff'\n  },\n  'I-Organism': {\n    bg: '#009688',\n    fg: '#fff'\n  },\n  'I-Organism_subdivision': {\n    bg: '#1de9b6',\n    fg: '#333'\n  },\n  'I-Organism_substance': {\n    bg: '#d84315',\n    fg: '#fff'\n  },\n  'I-Pathological_formation': {\n    bg: '#2962ff',\n    fg: '#fff'\n  },\n  'I-Simple_chemical': {\n    bg: '#4527a0',\n    fg: '#f2f2f2'\n  },\n  'I-Tissue': {\n    bg: '#fdd835',\n    fg: '#333'\n  },\n}\n","import React, {Fragment} from 'react';\nimport styled from 'styled-components';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport StyledText from './styled-text';\n\nimport mapCodeToColors from '../../utils/mapCodeToColors';\n\nconst Wrapper = styled.div`\n  background: #fafafa;\n  padding: 24px;\n  border-radius: 5px;\n  border: 1px solid #efefef;\n  line-height: 1.4;\n`;\n\nconst renderWrapper = (tags) => {\n  return <Wrapper>\n    {\n      tags.map((tag, i) => {\n        let space = ' ';\n        if (i === 0) {\n          space = '';\n        }\n        if (tag[1] === 'O') {\n          return <span key={i}>{space + tag[0]}</span>\n        }\n        return <Fragment key={i}>\n          {space}\n          <Tooltip title={tag[1]}>\n            <StyledText\n              bgColor={mapCodeToColors[tag[1]].bg}\n              color={mapCodeToColors[tag[1]].fg}\n            >\n              <span className='text'>\n                {tag[0]}\n              </span>\n              <span className='type'>\n                {tag[1]}\n              </span>\n            </StyledText>\n          </Tooltip>\n        </Fragment>\n      })\n    }\n  </Wrapper>\n}\n\nexport default props => {\n  if (props.tags && !props.loading) {\n    return renderWrapper(props.tags);\n  }\n  if (props.loading) {\n    return <Wrapper style={{ textAlign: 'center' }}>\n      <CircularProgress />\n    </Wrapper>\n  }\n  return null;\n}\n","import { connect } from 'react-redux';\nimport ResponseTextArea from '../../components/response-text-area';\n\nconst mapStateToProps = state => {\n  return {\n    tags: state.bioNlp.response.tags,\n    loading: state.bioNlp.loading\n  }\n}\n\nexport default connect(mapStateToProps, null)(ResponseTextArea);\n","import { connect } from 'react-redux';\nimport ResponseTextArea from '../../components/response-text-area';\n\nconst mapStateToProps = state => {\n  return {\n    tags: state.bc5cdr.response.tagging,\n    loading: state.bc5cdr.loading\n  }\n}\n\nexport default connect(mapStateToProps, null)(ResponseTextArea);\n","import { connect } from 'react-redux';\nimport ResponseTextAreaContainer from '../../components/response-text-area/container';\n\nconst mapStateToProps = state => {\n  return {\n    type: state.requestType.type\n  }\n}\n\nexport default connect(mapStateToProps, null)(ResponseTextAreaContainer);\n","import React from 'react';\nimport BioNlpTextArea from '../../containers/response-text-area/bioNlp-text-area'\nimport Bc5drTextArea from '../../containers/response-text-area/bc5dr-text-area'\n\nimport types from '../../enums/request-types';\n\nexport default props => {\n  if (props.type === types.BIO_NLP) {\n    return <BioNlpTextArea />\n  }\n  return <Bc5drTextArea />\n}\n","import constants from '../redux-constants/fetch';\n\nexport const updateRequestType = (type) => {\n  return {\n    type: constants.REQUEST_TYPE_CHANGE,\n    requestType: type\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport types from '../../enums/request-types';\n\nexport default class RequestRadio extends React.PureComponent {\n  static propTypes = {\n    type: PropTypes.string.isRequired,\n    updateRequestType: PropTypes.func.isRequired\n  }\n  handleChange = event => {\n    this.props.updateRequestType(event.target.value)\n  }\n  render () {\n    return (\n      <RadioGroup\n        aria-label=\"nerType\"\n        name=\"nerType\"\n        value={this.props.type}\n        onChange={this.handleChange}\n        row\n      >\n        <FormControlLabel\n          value={types.BIO_NLP}\n          control={<Radio color=\"primary\" />}\n          label=\"BIO NLP 13CG\"\n          labelPlacement=\"end\"\n        />\n        <FormControlLabel\n          value={types.BC5CDR}\n          control={<Radio color=\"primary\" />}\n          label=\"BC5CDR\"\n          labelPlacement=\"end\"\n        />\n      </RadioGroup>\n    )\n  }\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { updateRequestType } from '../actions/request-type';\nimport RequestRadio from '../components/request-type-radio';\n\nconst mapStateToProps = state => {\n  return {\n    type: state.requestType.type\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    updateRequestType\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestRadio);\n","import React, { Component } from 'react';\nimport GithubFork from '../../components/fork';\nimport { Highlighter } from '../../components/highlighter';\nimport { Header } from '../../components/header';\nimport InputWithExamples from '../../containers/input-with-examples';\nimport ResponseTextAreaContainer from '../../containers/response-text-area/container';\nimport RequestRadio from '../../containers/request-type-radio'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport './index.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#827717' }, // Purple and green play nicely together.\n    secondary: { main: '#11cb5f' }, // This is just green.A700 as hex.\n    text: {\n      secondary: '#424242'\n    }\n  },\n  typography: {\n    useNextVariants: true,\n  },\n  props: {\n    MuiButtonBase: { // Name of the component ⚛️ / style sheet\n      text: { // Name of the rule\n        color: '#f2f2f2', // Some CSS\n      },\n    },\n  }\n});\n\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className='main-wrapper' style={{ padding: '48px 12px' }}>\n          <GithubFork href='https://github.com/MeRajat/SolvingAlmostAnythingWithBert' />\n          <Grid container justify='center' alignItems='center' direction='column' spacing={24}>\n            <Grid item xs={6} className='text-center'>\n              <Header color='#827717' gutterBottom variant=\"h3\" component=\"h1\">\n                Solving BioNLP problems\n              </Header>\n              <Typography gutterBottom component=\"p\">\n                This App solves <b><Highlighter color='#455a64'>BioNLP</Highlighter></b> problems using <b><Highlighter color='#455a64'>Bert(BioBert Pytorch)</Highlighter></b>\n              </Typography>\n            </Grid>\n            <Grid item xs={10}>\n              <Card>\n                <CardContent>\n                  <Header color='#9e9d24' gutterBottom variant=\"h5\" component=\"h2\">\n                    Description\n                  </Header>\n                  <Typography component=\"p\">\n                    This app demonstrates how Bert(BioBert) can be finetuned and used to beat any state of the art result. In this we have trained it discover entites in medical text. In <b><Highlighter color='#455a64'>BioNLP13CG</Highlighter></b> it finds entites like <b><Highlighter color='#455a64'>'Anatomical_system'</Highlighter></b>, <b><Highlighter color='#455a64'>'Cancer'</Highlighter></b>, <b><Highlighter color='#455a64'>'Cell'</Highlighter></b>,  <b><Highlighter color='#455a64'>'Cellular_component'</Highlighter></b>, <b><Highlighter color='#455a64'>'Developing_anatomical_structure'</Highlighter></b>, <b><Highlighter color='#455a64'>'Gene_or_gene_product'</Highlighter></b>, <b><Highlighter color='#455a64'>'Immaterial_anatomical_entity'</Highlighter></b>, <b><Highlighter color='#455a64'>'Multi-tissue_structure'</Highlighter></b>, <b><Highlighter color='#455a64'>'Organ'</Highlighter></b>, <b><Highlighter color='#455a64'>'Organism'</Highlighter></b>, <b><Highlighter color='#455a64'>'Organism_subdivision'</Highlighter></b>, <b><Highlighter color='#455a64'>'Organism_substance'</Highlighter></b>, <b><Highlighter color='#455a64'>'Pathological_formation'</Highlighter></b>, <b><Highlighter color='#455a64'>'Simple_chemical'</Highlighter></b>, <b><Highlighter color='#455a64'>'Tissue'</Highlighter></b>  and in <b><Highlighter color='#455a64'>BC5CDR</Highlighter></b> it finds <b><Highlighter color='#455a64'>Disease and Chemicals</Highlighter></b>.\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item style={{ marginTop: '24px', width: '100%', textAlign: 'start' }} xs={10}>\n              <Header color='#9e9d24' gutterBottom variant=\"h5\" component=\"h2\"> DEMO </Header>\n            </Grid>\n            <Grid item style={{ width: '100%', textAlign: 'start' }} xs={10}>\n              <RequestRadio />\n            </Grid>\n            <InputWithExamples />\n            <Grid item xs={10} style={{ width: '100%' }} >\n              <ResponseTextAreaContainer />\n            </Grid>\n          </Grid>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import constants from '../redux-constants/fetch';\n\nconst initialState = {\n  response: {},\n  request: {\n    bionlp3g: 'BIO NLP 13CG',\n    text: ''\n  },\n  loading: false,\n  error: null\n}\n\nexport default (state = initialState, action) => {\n  const immutatedState = { ...state };\n  switch (action.type) {\n    case constants.FETCH_BIO_NLP_REQUEST:\n      immutatedState.loading = true;\n      return immutatedState;\n    case constants.FETCH_BIO_NLP_SUCCESS:\n      immutatedState.response = Object.assign({}, action.response);\n      immutatedState.loading = false;\n      immutatedState.error = null;\n      return immutatedState;\n    case constants.FETCH_BIO_NLP_FAILURE:\n      immutatedState.loading = false;\n      immutatedState.error = { ...action.error };\n      return immutatedState;\n    case constants.UPDATE_BIO_NLP:\n      immutatedState.request = {...state.request};\n      immutatedState.request.text = action.content;\n      return immutatedState;\n    default:\n      return state;\n  }\n}\n","import constants from '../redux-constants/fetch';\n\nconst initialState = {\n  response: {},\n  request: {\n    bc5cdr: 'BC5CDR',\n    text: ''\n  },\n  loading: false,\n  error: null\n}\n\nexport default (state = initialState, action) => {\n  const immutatedState = { ...state };\n  switch (action.type) {\n    case constants.FETCH_BC5CDR_REQUEST:\n      immutatedState.loading = true;\n      return immutatedState;\n    case constants.FETCH_BC5CDR_SUCCESS:\n      immutatedState.response = Object.assign({}, action.response);\n      immutatedState.loading = false;\n      immutatedState.error = null;\n      return immutatedState;\n    case constants.FETCH_BC5CDR_FAILURE:\n      immutatedState.loading = false;\n      immutatedState.error = { ...action.error };\n      return immutatedState;\n    case constants.UPDATE_BC5CDR:\n      immutatedState.request = {...state.request};\n      immutatedState.request.text = action.content;\n      return immutatedState;\n    default:\n      return state;\n  }\n}\n","import constants from '../redux-constants/fetch';\nimport types from '../enums/request-types';\n\nconst initialState = {\n  // type: types.BIO_NLP // Default State\n  type: types.BC5CDR\n}\n\nexport default (state = initialState, action) => {\n  const immutatedState = { ...state };\n  switch (action.type) {\n    case constants.REQUEST_TYPE_CHANGE:\n      immutatedState.type = action.requestType;\n      return immutatedState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport bioNlp from './bioNlp';\nimport bc5cdr from './bcdr';\nimport requestType from './request-type';\n\nexport default combineReducers({\n  bioNlp,\n  bc5cdr,\n  requestType\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/home';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nrequire('dotenv').config();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}